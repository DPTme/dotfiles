# This file contains shell configuration common to both `bash` and `zsh`. This file MUST be sourced
# by interactive shells and SHOULD be idempotent.

export PATH
export EDITOR=vim

#######################
# Path/Source Helpers #
#######################

# Remove a path from `PATH`.
path_remove() {
  PATH=":$PATH:"
  PATH="${PATH//:$1:/:}"
  PATH="${PATH#:}"
  PATH="${PATH%:}"
}

# Append to `PATH`, moving it to the end if it already exists.
path_append() {
  path_remove "$1"
  PATH="$PATH:$1"
}

# Prepend to `PATH`, moving it to the front if it already exists.
path_prepend() {
  path_remove "$1"
  PATH="$1:$PATH"
}

# Source a file if it exists.
source_if_exists() {
  [ -f "$1" ] && . "$1"
}

# Eval a command, with arbitrary args, if it exists.
eval_if_exists() {
  if command -v $1 >/dev/null; then
    eval "$($@)"
  fi
}

###########
# Aliases #
###########

# Docker Helpers
alias dockervm='screen ~/Library/Containers/com.docker.docker/Data/vms/0/tty'
alias dockerclean='docker rm `docker ps -aq`; docker volume rm `docker volume ls -q`; docker imagerm `docker image ls -aq`;'

# Helper to collapse rails routes after a grep.
alias collapse_routes="sed -E 's/^[[:space:]]+([A-Z])/  _  \1/g' | sed -E 's/^(.)/  \1/g' | align"

# Helper to show license for all gems.
alias gem_licenses='for i in `gem list | cut -d" " -f1`; do printf "%38s `gem spec $i license`\n" $i; done'

# DPT specific aliases
alias addalias='code /Users/dan/git/dotfiles/src/.zshrc'
alias cdd='cd ~/documents'
alias cddpt='cd ~/documents/dpt'
alias cdg='cd ~/git'
alias cdi='cd ~/git/rgnets/infrastructure && git status'
alias cdic='cd ~/git/rgnets/infrastructure && git status && code .'
alias cdp='cd ~/git/portals'
alias cdr='cd ~/git/rgnets/rxg && git status'
alias cdrc='cd ~/git/rgnets/rxg && git status && code .'
alias icon='/Users/dan/Documents/misc/update_icon.sh'
alias console='cddpt && rails c'
alias flush='sudo dscacheutil -flushcache; sudo killall -HUP mDNSResponder'
alias fs='foreman start'
alias icx='weakssh super@192.168.6.50'
alias llama='ollama run llama3.1:latest'
alias llamahost='launchctl setenv OLLAMA_HOST "0.0.0.0"'
alias llamaserve='OLLAMA_HOST=0.0.0.0 ollama serve'
alias master='git checkout master && git branch'
alias rxg='ssh dpt@rxg.dpt.me'
#alias tplink='telnet 192.168.6.13'
alias tplink='ssh admin@192.168.6.13'
alias weakssh='ssh -o Ciphers=+aes128-cbc,3des-cbc,aes192-cbc,aes256-cbc -o KexAlgorithms=+diffie-hellman-group1-sha1,diffie-hellman-group14-sha1 -o HostKeyAlgorithms=+ssh-rsa'
alias whatismyip='wget http://ipinfo.io/ip -qO - && echo'

#########
# Tools #
#########

# Google Cloud SDK
if [ -n "$ZSH_NAME" ]; then
  source_if_exists "$HOME/google-cloud-sdk/path.zsh.inc"
  source_if_exists "$HOME/google-cloud-sdk/completion.zsh.inc"
elif [ -n "$BASH" ]; then
  source_if_exists "$HOME/google-cloud-sdk/path.bash.inc"
  source_if_exists "$HOME/google-cloud-sdk/completion.bash.inc"
fi

# Homebrew
eval_if_exists /home/linuxbrew/.linuxbrew/bin/brew shellenv
eval_if_exists /opt/homebrew/bin/brew shellenv

# Java
path_prepend /opt/homebrew/opt/openjdk/bin

# Nodenv
eval_if_exists nodenv init -

# Perlbrew
source_if_exists ~/perl5/perlbrew/etc/bashrc

# Python
path_prepend "$HOME/.pyenv"
eval_if_exists pyenv init -
activate() {
  for f in ./venv ./.venv; do
    if [ -d $f ]; then
      . "$f/bin/activate"
      break
    fi
  done
}

# PIPX
path_append "$HOME/.local/bin"

# Flutter
path_prepend "$HOME/git/flutter/bin"

# Rust
source_if_exists "$HOME/.cargo/env"

# RVM (Must be last to avoid warnings.)
path_append "$HOME/.rvm/bin"
source_if_exists "$HOME/.rvm/scripts/rvm"

true
