# This file contains shell configuration common to both `bash` and `zsh`. This file MUST be sourced
# by interactive shells and SHOULD be idempotent.

export PATH
export EDITOR=vim

#######################
# Path/Source Helpers #
#######################

# Remove a path from `PATH`.
path_remove() {
  PATH=":$PATH:"
  PATH="${PATH//:$1:/:}"
  PATH="${PATH#:}"
  PATH="${PATH%:}"
}

# Append to `PATH`, moving it to the end if it already exists.
path_append() {
  path_remove "$1"
  PATH="$PATH:$1"
}

# Prepend to `PATH`, moving it to the front if it already exists.
path_prepend() {
  path_remove "$1"
  PATH="$1:$PATH"
}

# Source a file if it exists.
source_if_exists() {
  [ -f "$1" ] && . "$1"
}

###########
# Aliases #
###########

# Docker Helpers
alias dockervm='screen ~/Library/Containers/com.docker.docker/Data/vms/0/tty'
alias dockerclean='docker rm `docker ps -aq`; docker volume rm `docker volume ls -q`; docker imagerm `docker image ls -aq`;'

# Helper to collapse rails routes after a grep.
alias collapse_routes="sed -E 's/^[[:space:]]+([A-Z])/  _  \1/g' | sed -E 's/^(.)/  \1/g' | align"

# Helper to show license for all gems.
alias gem_licenses='for i in `gem list | cut -d" " -f1`; do printf "%38s `gem spec $i license`\n" $i; done'

#########
# Tools #
#########

# Google Cloud SDK
if [ -n "$ZSH_NAME" ]; then
  source_if_exists "$HOME/google-cloud-sdk/path.zsh.inc"
  source_if_exists "$HOME/google-cloud-sdk/completion.zsh.inc"
elif [ -n "$BASH" ]; then
  source_if_exists "$HOME/google-cloud-sdk/path.bash.inc"
  source_if_exists "$HOME/google-cloud-sdk/completion.bash.inc"
fi

# Homebrew
if [ -f "/home/linuxbrew/.linuxbrew/bin/brew" ]; then
  eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
elif [ -f "/opt/homebrew/bin/brew" ]; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
fi

# Java
path_prepend "/opt/homebrew/opt/openjdk/bin"

# Nodenv
eval "$(nodenv init -)"

# Perlbrew
. ~/perl5/perlbrew/etc/bashrc

# Python
path_prepend "$HOME/.pyenv"
eval "$(pyenv init -)"
activate() {
  for f in ./venv ./.venv; do
    if [ -d $f ]; then
      . "$f/bin/activate"
      break
    fi
  done
}

# Rust
. "$HOME/.cargo/env"

# RVM (Must be last to avoid warnings.)
path_append "$HOME/.rvm/bin"
. "$HOME/.rvm/scripts/rvm"
